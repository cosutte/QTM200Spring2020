hist(expenditure.txt$Y)
hist(expenditure.txt$Y)
graph = hist(expenditure.txt$Y)
return(graph)
hist(expenditure.txt$Y)
expendture <- expenditure.txt
expenditure <- expenditure.txt
plot(expediture$Y)
expenditure
plot(expenditure$Y)
plot(expenditure$Y)
expenditure <- expenditure.txt$Y
hist(expenditure)
expenditure.txt$Y
Y<-expenditure.txt$Y
hist(Y)
hist(Y)
d
expenditure.txt
Y<-expenditure.txt$Y
hist(Y)
expenditure <- v
expenditure <- expenditure.txt
expenditure$Y
plot(expenditure$Y)
hist(expenditure$Y)
expenditure.txt
expenditure <- read.table("expenditure.txt", header = T)
expenditure <- read.table("expenditure.txt", header = T)
expenditure.txt
expenditure <- read.table("expenditure.txt", header = T)
expenditure <- read.table("expenditure.txt", header = T)
expenditure.txt
hist(Y, )
hist(expenditure$Y, )
hist(expenditure.txt$Y)
expenditure.txt
expenditure <- expenditure.txt
expenditure$Y
Y<- c(61  68  72  72  62  91 104  99  70  82  84  84 104  84 103  86  69  94  79  80  98 124
92  67  66  65  57  60  74  49  60  59  68  56  72  80  79  95  79 142 108  94 107 109
114 112 105 129 107  77)
Y<- c(61, 68,  72,  72,  62,  91, 104,  99,  70,  82,  84,  84, 104,  84, 103,  86,  69,  94,  79,  80,  98, 124,
92,  67,  66,  65,  57,  60,  74,  49,  60,  59,  68,  56,  72,  80,  79,  95,  79, 142, 108,  94, 107, 109, 114, 112, 105, 129, 107,  77)
hist(expenditure.txt$Y)
expenditure <- read.table("expenditure", header = T)
expenditure <- expenditure.txt
#Histogram Y
hist(expenditure$Y)
expenditure.txt
expenditure <- expenditure.txt
#Histogram Y
hist(expenditure$Y)
min(expenditure$Y)
max(expenditure$Y)
expenditure <- read.table("expenditure.txt", header=T)
View(expenditure)
View(expenditure.txt)
expenditure.txt <- read.delim("~/GitHub/QTM200Spring2020/problem_sets/PS1/expenditure.txt")
View(expenditure.txt)
expenditure <- read.table("expenditure.txt", header=T)
#Chloe Sutter
#QTM 200
#PS1
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
getwd()
setwd("/Users/chloesutter")
#####################
# Problem 1
#####################
#A private school counselor was curious about the average of IQ of the students iin her school and took a random sample of 25 students' IQ scores.
#The following is the data set:
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#find a 90% confidence interval for the student IQ in the school assuming the population of IQ from which our random sample has been selected is normally distributed.
sd(y) #13.09
qnorm(.95) #1.64
mean(y) #98.44
me <- 1.64*(13.09/sqrt(10))
me #6.78
mean(y)-me #91.65
mean(y)+me #105.22
#90% CI = (91.65, 105.22)
#####################
# Problem 2
#####################
# A private school counselor was curious whether the average IQ of the students in her school is higher than the average IQ score 100 among all the schools in the country.
#She took a random sanple of 25 students. The following is the data set.
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#conduct a test with 0.05 significance level assuming the population of IQ from which our random sample has been selected is normally distributed.
mean(y) #98.44
prop.test(98.44, 100, p=0.5, correct=FALSE)
# p = 0.9844, which falls between the 95% CI of (0.93, 0.99) so we do not reject the null hypothesis that p = 0.5.
#####################
# Problem 3
#####################
#Researchers are curious about what affects the education expenditure on public education.
#expenditure is the available variables in a data set about the education expenditure.
expenditure <- read.table("expenditure.txt", header=T)
expenditure.txt
expenditure <- expenditure.txt
expenditure <- read.table("expenditure.txt", header=T)
#please plot the relationships among Y, X1, X2, and X3
#Histogram Y
hist(expenditure$Y)
min(expenditure$Y)
max(expenditure$Y)
expenditure <- read.table("expenditure.txt", header=T)
expenditure.txt
expenditure.txt <- read.delim("~/GitHub/QTM200Spring2020/problem_sets/PS1/expenditure.txt")
View(expenditure.txt)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
lapply(c(),  pkgTest)
expenditure.txt
expenditure.txt <- read.delim("~/GitHub/QTM200Spring2020/problem_sets/PS1/expenditure.txt")
View(expenditure.txt)
expenditure.txt
expenditure <- read.table("expenditure.txt", header=T)
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
expenditure <- read.table("expenditure.txt", header=T)
hist(expenditure$Y)
expenditure <- read.table("expenditure.txt", header=T)
# set working directory
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
hist(expenditure$Y)
plot(expenditure$Y)
plot(Y)
plot(expenditure$X1)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
plot(Y)
#Chloe Sutter
#QTM 200
#PS1
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
#####################
# Problem 1
#####################
#A private school counselor was curious about the average of IQ of the students iin her school and took a random sample of 25 students' IQ scores.
#The following is the data set:
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#find a 90% confidence interval for the student IQ in the school assuming the population of IQ from which our random sample has been selected is normally distributed.
sd(y) #13.09
qnorm(.95) #1.64
mean(y) #98.44
me <- 1.64*(13.09/sqrt(10))
me #6.78
mean(y)-me #91.65
mean(y)+me #105.22
#90% CI = (91.65, 105.22)
#####################
# Problem 2
#####################
# A private school counselor was curious whether the average IQ of the students in her school is higher than the average IQ score 100 among all the schools in the country.
#She took a random sanple of 25 students. The following is the data set.
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#conduct a test with 0.05 significance level assuming the population of IQ from which our random sample has been selected is normally distributed.
mean(y) #98.44
prop.test(98.44, 100, p=0.5, correct=FALSE)
# p = 0.9844, which falls between the 95% CI of (0.93, 0.99) so we do not reject the null hypothesis that p = 0.5.
#####################
# Problem 3
#####################
#Researchers are curious about what affects the education expenditure on public education.
#expenditure is the available variables in a data set about the education expenditure.
expenditure.txt
expenditure <- read.table("expenditure.txt", header=T)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
plot(Y)
expenditure.txt
View(expenditure)
expenditure.txt
View(expenditure)
expenditure.txt
expenditure <- read.table("expenditure.txt", header=T)
#Chloe Sutter
#QTM 200
#PS1
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
# set working directory
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
#####################
# Problem 1
#####################
#A private school counselor was curious about the average of IQ of the students iin her school and took a random sample of 25 students' IQ scores.
#The following is the data set:
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#find a 90% confidence interval for the student IQ in the school assuming the population of IQ from which our random sample has been selected is normally distributed.
sd(y) #13.09
qnorm(.95) #1.64
mean(y) #98.44
me <- 1.64*(13.09/sqrt(10))
me #6.78
mean(y)-me #91.65
mean(y)+me #105.22
#90% CI = (91.65, 105.22)
#####################
# Problem 2
#####################
# A private school counselor was curious whether the average IQ of the students in her school is higher than the average IQ score 100 among all the schools in the country.
#She took a random sanple of 25 students. The following is the data set.
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#conduct a test with 0.05 significance level assuming the population of IQ from which our random sample has been selected is normally distributed.
mean(y) #98.44
prop.test(98.44, 100, p=0.5, correct=FALSE)
expenditure <- read.table("expenditure.txt", header=T)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
hist(expenditure$Y)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
hist(expenditure$Y)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
hist(expenditure$Y)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
plot(Y)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
plot(expenditure~Y,X1)
hist(expenditure$Y)
expenditure <- read.table("expenditure.txt", header=T)
View(expenditure)
View(expenditure)
plot(expenditure$Y)
View(expenditure)
expenditure <- read.table("expenditure.txt", header=T)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
hist(expenditure$Y)
hist(expenditure$Y)
plot()
plot(Y)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
hello<- expenditure$Y
plot(hello)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
hist(expenditure$Y)
plot(expenditure$Y)
install.packages("ggplot2")
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
plot(expenditure$Y)
plot(expenditure$Y)
plot(Y)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
plot(Y)
plot(expenditure$Y)
hist(expenditure$Y)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#find z score
mean(y)
#standard deviation of sampling distribution
sd(y)
(13.09)/sqrt(25)
(98.44-100)/2.61
#calculate p-value
2*pnorm(-abs(-0.59))
2*0.55
#calculate a test statistic
mean(Y)
#calculate a test statistic
mean(y)
#population mean = 100
sd(y)
13.09/sqrt(25)
(98.44-100)/2.618
#find p value
2*pt(-0.59, df=24, lower.tail=F)
#find p value
2*pt(abs(-0.59), df=24, lower.tail=F)
expenditure.txt
expenditure <- read.table("expenditure.txt", header=T)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
hist(expenditure$Y)
hist(expenditure$Y, main="Y", xlab="Y", ylab="frequency")
min(y)
max(y)
mode(y)
#Plot X1
plot(expenditure$X1)
#Plot X1
hist(expenditure$X1)
#Plot X2
hist(expenditure$X2, main="X2", xlab="X2", ylab="Frequency")
#Plot X3
hist(expenditure$X3, main="X3", xlab="X3", ylab="Frequency")
#Plot X2
hist(expenditure$X2, main="X2 Variable Frequency", xlab="X2", ylab="Frequency")
#Plot X3
hist(expenditure$X3, main="X3 Variable Frequency", xlab="X3", ylab="Frequency")
mean(X3)
mean(expenditure$X3)
mean(expenditure$X3)
#Plot X2
hist(expenditure$X2, main="X2 Variable Frequency", xlab="X2", ylab="Frequency")
#Plot X3
hist(expenditure$X3, main="X3 Variable Frequency", xlab="X3", ylab="Frequency")
#Plot X2
hist(expenditure$X2, main="X2 Variable Frequency", xlab="X2", ylab="Frequency")
#Plot X2
hist(expenditure$X2, main="X2 Variable Frequency", xlab="X2", ylab="Frequency")
#Plot X1
hist(expenditure$X1, main="X1 Variable Frequency", xlab="X1", ylab="Frequency")
#Plot X3
hist(expenditure$X3, main="Number of People per Thousand Living in Urban Areas", xlab="X3", ylab="Frequency")
#Plot X3
hist(expenditure$X3, main="Number of People per Thousand Living in Urban Areas", xlab="X3", ylab="Frequency")
#Plot X2
hist(expenditure$X2, main="Number of Residents per Thousand Under 18 Years", xlab="X2", ylab="Frequency")
#Plot X2
hist(expenditure$X2, main="Number of Residents per Thousand Under 18 Years", xlab="X2", ylab="Frequency")
#Plot X1
hist(expenditure$X1, main="Per Capita Personal Income", xlab="X1", ylab="Frequency")
hist(expenditure$Y, main="Per Capita Expenditure on Public Education", xlab="Y", ylab="Frequency")
#Plot the relationship between Y and Region. On average, which region has the highest per capita expenditure on public education?
plot(expenditure$Y, expenditure$Region)
#Plot the relationship between Y and Region. On average, which region has the highest per capita expenditure on public education?
plot(expenditure$Region, expenditure$Y)
#Plot the relationship between Y and Region. On average, which region has the highest per capita expenditure on public education?
boxplot(expenditure$Region, expenditure$Y, main="Region and Per Capita Public Education Expenditure", xlab="Region", ylab="Expenditure")
#Plot the relationship between Y and Region. On average, which region has the highest per capita expenditure on public education?
boxplot(region~Y, data=expenditure, main="Region and Per Capita Public Education Expenditure", xlab="Region", ylab="Expenditure")
#Plot the relationship between Y and Region. On average, which region has the highest per capita expenditure on public education?
boxplot(Region~Y, data=expenditure, main="Region and Per Capita Public Education Expenditure", xlab="Region", ylab="Expenditure")
#Plot the relationship between Y and Region. On average, which region has the highest per capita expenditure on public education?
boxplot(Y~Region, data=expenditure, main="Region and Per Capita Public Education Expenditure", xlab="Region", ylab="Expenditure")
#Plot the relationship between Y and X1, describe the graph and relationship.
plot(expenditure$Y, expenditure$X1)
#Plot the relationship between Y and X1, describe the graph and relationship.
plot(expenditure$Y, expenditure$X1, main = "Public Education Expenditure & Personal Income Per Capita", xlab="Y", ylab="X1")
#Plot the relationship between Y and X1, describe the graph and relationship.
plot(expenditure$X1, expenditure$Y, main = "Public Education Expenditure & Personal Income Per Capita", xlab="Y", ylab="X1")
#Plot the relationship between Y and X1, describe the graph and relationship.
plot(expenditure$X1, expenditure$Y, main = "Public Education Expenditure & Personal Income Per Capita", xlab="X1", ylab="Y")
#Plot the relationship between Y and X1, describe the graph and relationship.
plot(expenditure$Y, expenditure$X1, main = "Public Education Expenditure & Personal Income Per Capita", xlab="Y", ylab="X1")
#Reproduce the above graph adding region and display different regions with different colors/symbols.
boxplot(Y~X1~Region, data=expenditure)
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(Y~X1, data="expenditure",col=as.integer(Region), legend(c("1", "2", "3", "4")))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(Y~X1, data="expenditure")
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, pch=as.integer(Region))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, pch=as.integer(expenditure$Region))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1") )
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4))
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4)
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1"))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1"))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1"))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot (expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
legend(c("1", "2", "3", "4"), col=c(1,2,3,4), pch=c(1,2,3,4),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region))
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region),
main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region), main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region), main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1", legend(c("1", "2", "3", "4")), pch=c(1,2,3,4), col=c(1,2,3,4))
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region), main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1", legend(c("1", "2", "3", "4")), pch=c(1,2,3,4))
#Reproduce the above graph adding region and display different regions with different colors/symbols.
attach(sumcr)
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region), main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
