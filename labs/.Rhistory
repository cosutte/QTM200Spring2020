standardresid.classbribe
library(readr)
women <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv")
View(women)
temp.model <- lm(reserved~irrigation)
temp.model <- lm(data=women, reserved~irrigation)
temp.model
temp.model <- lm(data=women, irrigation~reserved)
regress<- lm(data=women, irrigation~reserved)
regress
regress <- lm(data=women, water~reserved)
regress
fruitfly <- read.csv("~/GitHub/QTM200Spring2020/problem_sets/PS2/fruitfly.csv")
View(fruitfly)
import.csv("fruitfly")
# Import fruit fly
mean(fruitfly)
# Import the data set and obtain summary statistiscs and examine the distribution of the overall lifespan of the fruitflies.
# Import fruit fly
fruitfly()
# Import the data set and obtain summary statistiscs and examine the distribution of the overall lifespan of the fruitflies.
# Import fruit fly
summary(fruitfly)
hist(fruitfly$lifespan)
# 2. Plot lifespan vs thorax. Does it look like there is a linear relationship?
# What is the correlation coefficient between these two variables?
plot(fruitfly$lifespan, fruitfly$thorax)
# 2. Plot lifespan vs thorax. Does it look like there is a linear relationship?
# What is the correlation coefficient between these two variables?
plot(fruitfly$lifespan, fruitfly$thorax, xlab="Lifespan", ylab="Thorax", main="Lifespan vs. Thorax")
mean(women$water)
mean(women$reserved)
sum(women$water)
sum(women$water)
sum(women$reserved)
sum((women$reserved)-mean(women$reserved))*sum((women$water)-mean((women$water)))
sum((women$water-mean(women$water))^2)
-6.074229e-29/364100.9
regress <- lm(data=women, water~reserved)
regress
sum((women$reserved-mean(women$reserved))*(women$water-mean(women$water)))
sum((women$water-mean(women$water))^2)
664.1056/364100.9
sum((women$water-mean(women$water))^2)
sum((women$reserved-mean(women$reserved))*(women$water-mean(women$water)))
sum((women$reserved-mean(women$reserved))*(women$water-mean(women$water)))
sum((women$water-mean(women$water))^2)
664.1056/364100.9
regress <- lm(data=women, water~reserved)
regress
sum(((women$reserved)-mean(women$reserved))*((women$water)-mean(women$water)))
sum((women$water-mean(women$water))^2)
regress <- lm(data=women, water~reserved)
regress <- lm(data=women, water~reserved)
regress
# It looks like there is a positive linear relationship between lifespan and thorax.
rcorr(x, type="pearson")
# It looks like there is a positive linear relationship between lifespan and thorax.
library(Hmisc)
# It looks like there is a positive linear relationship between lifespan and thorax.
library(Hmisc)
# It looks like there is a positive linear relationship between lifespan and thorax.
r <- cov(fruitfly)[lifespan,thorax]/sd(fruitfly$lifespan)*sd(fruitfly$thorax)
# It looks like there is a positive linear relationship between lifespan and thorax.
lifespan <- fruitfly$lifespan
thorax <- fruitfly$thorax
r <- cov(lifespan,thorax)/sd(fruitfly$lifespan)*sd(fruitfly$thorax)
r
r <- cov(fruitfly$lifespan,fruitfly$thorax)/sd(fruitfly$lifespan)*sd(fruitfly$thorax)
r
# Correlation coefficient is 0.0038
cor(fruitfly$lifespan, fruitfly$thorax, method="pearson")
# It looks like there is a positive linear relationship between lifespan and thorax.
cov(fruitfly$lifespan,fruitfly$thorax)
sd(fruitfly$lifespan)
sd(fruitfly$thorax)
0.8658645/(17.56389*0.07745367)
# Correlation coefficient is 0.0038
cor(fruitfly$lifespan, fruitfly$thorax, method="pearson")
# 3. Regress lifespan on thorax. Interpret the slope of the fitted model.
regress2 <- lm(data=fruitfly, lifespan~thorax)
regress2
regress
regress2
# 4. Test for a significant linear relationship between lifespan and thorax.
# Provide and interpret your results of your test.
# Want to find r squared
anova(regress2)
# 3. Regress lifespan on thorax. Interpret the slope of the fitted model.
regress2 <- lm(data=fruitfly~lifespan~thorax)
# 3. Regress lifespan on thorax. Interpret the slope of the fitted model.
regress2 <- lm(data=fruitfly~lifespan~thorax)
# 3. Regress lifespan on thorax. Interpret the slope of the fitted model.
regress2 <- lm(data=fruitfly, lifespan~thorax)
regress2
# 4. Test for a significant linear relationship between lifespan and thorax.
# Provide and interpret your results of your test.
# Want to find r squared
anova(regress2)
# 3. Regress lifespan on thorax. Interpret the slope of the fitted model.
regress2 <- lm(fruitfly$lifespan~fruitfly$thorax)
regress2
# 4. Test for a significant linear relationship between lifespan and thorax.
# Provide and interpret your results of your test.
# Want to find r squared
anova(regress2)
15497/(15497+22756)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
# Use the function confint() in R
mean(fruitfly$lifespan)
confint(regress2)
# Confidence Interval: ()
help(confint)
confint(regress2, level=.90)
confint(regress2, level=.90)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(fruitfly$lifespan)
regsum <- summary(regress2)
c("lower" = regress2$coef[2,1] - qt(0.975, df = regress2$df[2]) * regress2$coef[2, 2],
"upper" = regress2$coef[2,1] + qt(0.975, df = regress2$df[2]) * regress2$coef[2, 2])
c("lower" = regress2$coef[,1] - qt(0.975, df = regress2$df[2]) * regress2$coef[2, 2],
"upper" = regress2$coef[2,1] + qt(0.975, df = regress2$df[2]) * regress2$coef[2, 2])
dim(regress2)
regress2
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(regress2)
fruitfly$lifespan
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(lifespan)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(thorax)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(fruitfly$thorax) #0.82
qnorm(.05)
sd(fruitfly$thorax)
fruitfly$thorax
sum(fruitfly$thorax)
summary(fruitfly$thorax)
me <- -1.64*(.077/sqrt(125))
me
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(regress2) #0.82
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
mean(fruitfly$lifespan) #0.82
sd(fruitfly$lifespan) #0.077
qnorm(.05) #-1.64
me <- -1.64*(17.56/sqrt(125))
me
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
anova(regress2)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2)
144.33-13.6
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2, level=.90)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2, level=.90)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2)
144.33+(1.645*(13.6/sqrt(125)))
144.33-(1.645*(13.6/sqrt(125)))
144.33-(9.152*(13.6/sqrt(125)))
144.33+(9.152*(13.6/sqrt(125)))
var(regress2)
sd(regress2))
sd(regress2)
144.33-(9.152*(13.6/sqrt(125)))
144.33+(9.152*(13.6/sqrt(125)))
144.33-(9.152*(6/sqrt(125)))
144.33-(9.152*(13.6/sqrt(125)))
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2)
sd(fruitfly$lifespan)
144.33-(9.152*(17.56/sqrt(125)))
144.33-(9.152*(13.6/sqrt(125)))
sd(fruitfly$thorax)
144.33-(9.152*(0.077/sqrt(125)))
144.33-(9.152*(13.6/sqrt(125)))
t
144.33-(9.152*(13.6/sqrt(125)))
144.33+(9.152*(13.6/sqrt(125)))
sd(fruitfly$thorax)
144.33-(9.152*(0.077/sqrt(125)))
sd(regress2)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2, level=.90)
144.33-(9.152*(15.77/sqrt(125)))
13.6
144.33-(9.152*(13.6/sqrt(125)))
144.33-(9.152*(-61.05 /sqrt(125)))
13.6
144.33-(9.152*(13.6/sqrt(125)))
# 1. Import the data set and obtain summary statistiscs and examine the distribution of the overall lifespan of the fruitflies.
summary(fruitfly)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2, level=.90)
144.33-(1.645*(13.6/sqrt(125)))
144.33+(1.645*(13.6/sqrt(125)))
144.33+(1.645*(15.77/sqrt(125)))
144.33-(1.645*(15.77/sqrt(125)))
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan when thorax=0.8
help(predict)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2, level=.90)
# 5. Provide the 90% confidence interval for the slope of the fitted model.
# Use the formula for typical confidence intervals.
summary(regress2)
144.33 + (9.152/2)*15.77
144.33 + (9.152/2)*15.77
144.33 + 1.5e-15*15.77
144.33 + (9.152/2)*15.77
144.33 + (sqrt(9.152))*15.77
144.33 + 1.65*15.77
144.33 + 1.657*15.77
predict(lm(lifespan~thorax), data=fruitfly, se.fit=T)
new.fruitfly <- data.frame(wt=c(.8))
predict(Model, newdata=new.fruitfly)
predict(lifespan, newdata=new.fruitfly)
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan (Y) when thorax (X) = 0.8
help(predict)
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan (Y) when thorax (X) = 0.8
predict(lm(fruitfly$lifespan~fruitfly$thorax), interval="prediction")
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan (Y) when thorax (X) = 0.8
new_fruitfly <- fruitfly; new_fruitfly$X <- .8
predict(lm(Y~X), newdata=new_fruitfly, se.fit=T)
predict(lm(lifespan~thorax), newdata=new_fruitfly, se.fit=T)
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="confidence", level=0.95)
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="prediction", level=0.95)
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan (Y) when thorax (X) = 0.8
new_fruitfly <- fruitfly; new_fruitfly$X <- .8
new_fruitfly
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan (Y) when thorax (X) = 0.8
new_fruitfly <- fruitfly; new_fruitfly$thorax <- .8
predict(lm(lifespan~thorax), newdata=new_fruitfly, se.fit=T)
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="confidence", level=0.95)
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="prediction", level=0.95)
# 6. Use the predict() function in R to
# (1) predict an individual fruitfly’s lifespan (Y) when thorax (X) = 0.8
new_fruitfly <- fruitfly; new_fruitfly$thorax <- .8
predict(lm(lifespan~thorax), newdata=new_fruitfly, se.fit=T)
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="prediction", level=0.95)
# (2) the average lifespan of fruitflies when thorax=0.8 by the fitted model.
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="confidence", level=0.95)
fitted <- regress2
(
fitted <- regress2
prediction <- predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="prediction", level=0.95)
confidence <- predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="confidence", level=0.95)
fitted <- regress2
prediction <- predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="prediction", level=0.95)
confidence <- predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="confidence", level=0.95)
plot(fitted)
predict(lm(lifespan~thorax), newdata=new_fruitfly, se.fit=T)
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="prediction", level=0.95)
# (2) the average lifespan of fruitflies when thorax=0.8 by the fitted model.
predict(lm(lifespan~thorax), newdata=new_fruitfly, interval="confidence", level=0.95)
# Check by-hand answer for chi-square
chisq.test(classbribe)
pchisq(3.79, df = (rows-1)*(cols-1), lower.tail = F) # p-value = 0.1503
# b)
rows = nrow(observed) # Number of rows
regress <- lm(data=women, water~reserved)
regress
# Pearson correlation
pear_cor <- (cov(fruitfly$thorax, fruitfly$lifespan)) / (sd(fruitfly$thorax) * sd(fruitfly$lifespan))
pear_cor
cor(fruitfly$thorax, fruitfly$lifespan) # Checking answer
t_stat <- (pear_cor * sqrt(125 - 2)) / sqrt(1 - pear_cor^2) # Calculating the t-test statistic
t_stat
p_value <- 2 * pt(t_stat, 125 - 2, lower.tail = FALSE)
p_value
# Check correlation coefficient
cor(fruitfly$lifespan, fruitfly$thorax, method="pearson")
# Pearson correlation
pear_cor <- (cov(fruitfly$thorax, fruitfly$lifespan)) / (sd(fruitfly$thorax) * sd(fruitfly$lifespan))
pear_cor
cor(fruitfly$thorax, fruitfly$lifespan) # Checking answer
t_stat <- (pear_cor * sqrt(125 - 2)) / sqrt(1 - pear_cor^2) # Calculating the t-test statistic
t_stat
p_value <- 2 * pt(t_stat, 125 - 2, lower.tail = FALSE)
p_value
# 7. For a sequence of thorax values, draw a plot with their fitted values for lifespan,
# as well as the prediction intervals and confidence intervals.
library(gplot)
# 7. For a sequence of thorax values, draw a plot with their fitted values for lifespan,
# as well as the prediction intervals and confidence intervals.
library(gplots)
# 7. For a sequence of thorax values, draw a plot with their fitted values for lifespan,
# as well as the prediction intervals and confidence intervals.
library(ggplots)
# 7. For a sequence of thorax values, draw a plot with their fitted values for lifespan,
# as well as the prediction intervals and confidence intervals.
library(gplots)
# 7. For a sequence of thorax values, draw a plot with their fitted values for lifespan,
# as well as the prediction intervals and confidence intervals.
help(polygon)
thorax_int <-ggplot(fruitfly, aes(thorax, lifespan)) +
geom_line(aes(linetype=Legend, colour = Legend), # Line type depends on cond
size = 1.5) +
scale_linetype_manual(values=c("dotdash", "solid", "dotted"))+
theme_bw()+
geom_ribbon(aes(ymin = lower, ymax = higher, fill = Legend), alpha = .35) +
labs(x = "x", y = "y")+
theme(axis.title.x = element_text(colour="#193000", size=15),
axis.title.y = element_text(colour="#193000", size=15),
axis.text.x = element_text(angle=0, size=15),
axis.text.y = element_text(angle=0, size=15),
legend.title = element_text(size=14, face="plain"),
plot.title = element_text(lineheight=.8, size=15, hjust = 0, face="italic"))+
scale_x_continuous(limits = c(1, 5)) +
theme(legend.position="none")
thorax_int
thorax_int <-ggplot(fruitfly, aes(thorax, lifespan)) +
geom_line(aes(linetype=legend, colour =legend), # Line type depends on cond
size = 1.5) +
scale_linetype_manual(values=c("dotdash", "solid", "dotted"))+
theme_bw()+
geom_ribbon(aes(ymin = lower, ymax = higher, fill = Legend), alpha = .35) +
labs(x = "x", y = "y")+
theme(axis.title.x = element_text(colour="#193000", size=15),
axis.title.y = element_text(colour="#193000", size=15),
axis.text.x = element_text(angle=0, size=15),
axis.text.y = element_text(angle=0, size=15),
legend.title = element_text(size=14, face="plain"),
plot.title = element_text(lineheight=.8, size=15, hjust = 0, face="italic"))+
scale_x_continuous(limits = c(1, 5)) +
theme(legend.position="none")
thorax_int
plotCI(regress2)
help(plotCI)
help(confidenceinterval)
polygon(c(X, rev(X)),c(Y_Lowerbound, rev(Y_Upperbound)), col="salmon", border =NA)
plot.new()
plot.window(xlim=c(-.5,.5),ylim=c(1,50))
fitted <- new_fruitfly$thorax
plot(fitted)
fitted <- fruitfly$thorax
plot(fitted)
fitted <- new_fruitfly$thorax
plot(fitted)
help(setseed)
help(setseed)
help(??setseed)
help(set.seed)
plot(fitted)
set.seed(0815)
F <- runif(54.41)
L <- runif(54.41, 27.37, 81.45)
U <- runif(54.41, 51.91, 56.91)
plot(F,L,U)
F <- runif(54.41)
L <- runif(54.41, 27.37, 81.45)
U <- runif(54.41, 51.91, 56.91)
x <- 1:125
require(plotrix)
plotCI(x, F, ui=U, li=L)
plotCI(x, F, ui=U, li=L)
set.seed(1234)
x <- rnorm(20)
df <- 124
# plot
plot(lifespan~thorax, data = new_fruitfly, type = 'n')
# predicts + interval
pred <- seq(min(prediction), max(prediction), length.out=100)
# 2. Plot lifespan vs thorax. Does it look like there is a linear relationship?
# What is the correlation coefficient between these two variables?
plot(fruitfly$lifespan, fruitfly$thorax, xlab="Lifespan", ylab="Thorax", main="Lifespan vs. Thorax")
lapply(c("ggplot2"),  pkgTest)
library(ggplot2)
ggplot(fruitfly, aes(x=thorax, y=lifespan)) + geom_point() + geom_smooth(method=lm, se=TRUE)
new_df2 <- cbind(fruitfly, pred, row.names = NULL)
ggplot(new_df2, aes(thorax, lifespan)) + geom_point() + geom_line(aes(y=lwr), color = "red", linetype = "dashed")+ geom_line(aes(y=upr), color = "red", linetype = "dashed")+ geom_smooth(method=lm, se=TRUE)
new_df2 <- cbind(fruitfly, pred)
new_df2 <- cbind(fruitfly, pred, row.names = FALSE)
ggplot(fruitfly, aes(x=thorax, y=lifespan)) + geom_point() + geom_smooth(method=lm, se=TRUE)
new_df2 <- cbind(fruitfly, pred, row.names = FALSE)
new_df2 <- cbind(fruitfly, pred)
new_df2 <- cbind(fruitfly, pred)
new_df2 <- cbind(fruitfly, pred, row.names = TRUE)
new_df2 <- merge(fruitfly, pred, by=c("X","Y")
new_df2 <- merge(fruitfly, pred, by=c("X","Y"))
new_df2 <- merge(fruitfly, pred, by=c("X","Y"))
ggplot(new_df2, aes(thorax, lifespan)) + geom_point() + geom_line(aes(y=lwr), color = "red", linetype = "dashed")+ geom_line(aes(y=upr), color = "red", linetype = "dashed")+ geom_smooth(method=lm, se=TRUE)
new_df2 <- merge(fruitfly, pred, by=c("X","Y"))
new_df2 <- merge(fruitfly, pred, by=c(thorax,lifespan))
new_df2 <- merge(fruitfly, pred, by=c("thorax","lifespan"))
new_df2 <- merge(fruitfly, pred, by=c("thorax","lifespan"))
View(fruitfly)
View(fruitfly)
ggplot(fruitfly, aes(x=thorax, y=lifespan)) + geom_point() + geom_smooth(method=lm, se=TRUE)
new_df2 <- merge(fruitfly, pred, by=c("thorax","lifespan"))
new_df2 <- merge(fruitfly, pred, by=c(by."X","Y"))
new_df2 <- merge(fruitfly, pred, by=c("X","Y"))
new_df2 <- merge(fruitfly, pred)
ggplot(new_df2, aes(thorax, lifespan)) + geom_point() + geom_line(aes(y=lwr), color = "red", linetype = "dashed")+ geom_line(aes(y=upr), color = "red", linetype = "dashed")+ geom_smooth(method=lm, se=TRUE)
ggplot(fruitfly, aes(x=thorax, y=lifespan)) + geom_point() + geom_smooth(method=lm, se=TRUE) # Pl
new_df <- cbind(fruitfly, prediction, row.names = NULL)
ggplot(new_df, aes(thorax, lifespan)) + geom_point() + geom_line(aes(y=lwr), color = "red", linetype = "dashed")+ geom_line(aes(y=upr), color = "red", linetype = "dashed")+ geom_smooth(method=lm, se=TRUE)
# Check by-hand answer for chi-square
chisq.test(classbribe)
regress
hist(fruitfly$lifespan)
hist(fruitfly$lifespan, xlab="lifespan", main="Fruitfly Lifespan")
# 4. Test for a significant linear relationship between lifespan and thorax.
# Provide and interpret your results of your test.
# Find r-squared value
anova(regress2)
15497/(15497+22756)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# Jeff wd
setwd('~/Users/chloesutter/GitHub/QTM200Spring2020/labs')
# Jeff wd
setwd('/Users/chloesutter/GitHub/QTM200Spring2020/labs')
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("faraway"), pkgTest)
# load dataset from Faraway package
data(sat)
?sat
# load dataset from Faraway package
load("/Users/chloesutter/Downloads/fake.RData")
# load dataset from Faraway package
load("/Users/chloesutter/Downloads/fake.RData")
data(sat)
?sat
# Estimate the effect of "expend" on "takers"
# using a 95% level of significance
sat1 <- lm(takers ~ expend, data=sat)
summary(sat1)
# What if we control for other factors?
sat2 <- lm(takers ~ expend + ratio + salary, data=sat)
summary(sat2)
# Estimate the effect of "expend" on "takers"
# using a 95% level of significance
sat1 <- lm(takers ~ expend, data=sat)
summary(sat1)
# What if we control for other factors?
sat2 <- lm(takers ~ expend + ratio + salary, data=sat)
summary(sat2)
View(fake.dat)
View(fake.dat)
View(sat)
View(sat)
# What if we include all the variables in the data?
sat3 <- lm(takers ~ ., data=sat)
summary(sat3)
# Estimate the effect of "expend" on "takers"
# using a 95% level of significance
sat1 <- lm(takers ~ expend, data=sat)
summary(sat1)
# What if we control for other factors?
sat2 <- lm(takers ~ expend + ratio + salary, data=sat)
# What if we include all the variables in the data?
sat3 <- lm(takers ~ ., data=sat)
summary(sat3)
load("Busby_Football.RData")
colnames(x)
load("/Users/chloesutter/Downloads/Busby_Football.RData")
load("Busby_Football.RData")
load("/Users/chloesutter/Downloads/Busby_Football.RData")
colnames(x)
# Comparison of OSU students before and after the game
t.test(papprove ~ Post, data=x[x$osu==1,])
# Comparison of UO students before and after the game
t.test(papprove ~ Post, data=x[x$osu==0,])
OSU_OU <- lm(papprove ~ post + osu, data=x)
summary(OSU_OU)
model1 <- lm(papprove ~ post data=x)
model1 <- lm(papprove ~ post, data=x)
model2 <- lm(papprove ~ osu, data=x)
model3 <- lm(papprove ~ post + osu , data=x)
summary(model1)
summary(model2)
summary(model3)
summary(model1)
